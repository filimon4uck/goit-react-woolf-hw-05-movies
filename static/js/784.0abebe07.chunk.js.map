{"version":3,"file":"static/js/784.0abebe07.chunk.js","mappings":"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","sources":["webpack://goit-react-woolf-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-woolf-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","defaultsImage.js","components/SeachForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import style from './Loader.module.css';\nimport { TailSpin } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <span className={style.loaderContainer}>\n      <TailSpin\n        visible={true}\n        height=\"60\"\n        width=\"60\"\n        color=\"black\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n      />\n    </span>\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"MoviesList_movies_list__EAcLe\",\"list_card\":\"MoviesList_list_card__moLVH\"};","import { DEFAULT_IMG } from 'defaultsImage';\nimport { Link, useLocation } from 'react-router-dom';\nimport style from './MoviesList.module.css';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={style.movies_list}>\n        {movies?.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link\n              className={style.list_card}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : DEFAULT_IMG\n                }\n                alt={title}\n                width={250}\n                height={400}\n              />\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default MoviesList;\n","export const DEFAULT_IMG =\n  'https://sesupport.edumall.jp/hc/article_attachments/900009570963/noImage.jpg';\n","const { useState } = require('react');\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const onChangeHandle = ({ target: { value } }) => {\n    setQuery(value);\n  };\n  const onSubmitHandle = e => {\n    e.preventDefault();\n    if (query.trim === '') {\n      return;\n    }\n    onSubmit(query);\n  };\n  return (\n    <form onSubmit={onSubmitHandle}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        onChange={onChangeHandle}\n        placeholder=\"Enter movie\"\n      ></input>\n      <button type=\"submit\">Seach</button>\n    </form>\n  );\n};\nexport default SearchForm;\n","import SearchForm from 'components/SeachForm/SearchForm';\nimport './MoviesPage.module.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchSeachMovie } from 'services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') || ''\n  );\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    const searchMovie = async () => {\n      const movies = await fetchSeachMovie(searchQuery);\n      setMovies(movies);\n    };\n\n    try {\n      searchMovie();\n      setIsLoading(true);\n      setError('');\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [searchQuery]);\n\n  const handleFormSubmit = newQuery => {\n    if (newQuery === searchQuery) {\n      return;\n    }\n    setSearchParams({ query: newQuery });\n    setSearchQuery(newQuery);\n  };\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <div>There are no movies with this request. Please, try again... </div>\n      )}\n      {error && <div>{error}</div>}\n    </main>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'debf88dce832779bb7355a403cec0327';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?&api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSeachMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetailsMovie = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?language=en-US'&api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieRewiews = async movie_id => {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?language=en-US'&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["_jsx","className","style","children","TailSpin","visible","height","width","color","ariaLabel","radius","_ref","movies","location","useLocation","_Fragment","map","_ref2","id","title","poster_path","_jsxs","Link","to","concat","state","from","src","DEFAULT_IMG","alt","useState","require","onSubmit","_useState","_useState2","_slicedToArray","query","setQuery","e","preventDefault","trim","type","name","onChange","value","target","placeholder","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","searchQuery","setSearchQuery","_useState3","_useState4","setMovies","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","useEffect","searchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchSeachMovie","sent","stop","apply","arguments","console","log","Loader","SearchForm","newQuery","length","MoviesList","axios","API_KEY","fetchTrendingMovies","response","abrupt","data","results","_callee2","_context2","_x","fetchDetailsMovie","_ref3","_callee3","movie_id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieRewiews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}